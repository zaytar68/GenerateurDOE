@using GenerateurDOE.Models
@using System.Text.Json
@inject Radzen.NotificationService NotificationService

<div class="table-matieres-editor card">
    <div class="card-header">
        <h6 class="mb-0">
            <span class="oi oi-list-rich" aria-hidden="true"></span>
            Configuration Table des Matières
        </h6>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="DocumentGenere.IncludeTableMatieres"
                                   @bind-Value:after="OnTableMatieresChanged"
                                   class="form-check-input"
                                   id="includeTableMatieres" />
                    <label class="form-check-label" for="includeTableMatieres">
                        <strong>Inclure une table des matières</strong>
                    </label>
                    <div class="form-text">
                        Génère automatiquement une table des matières basée sur la structure du document
                    </div>
                </div>

                @if (DocumentGenere.IncludeTableMatieres)
                {
                    <div class="form-check mb-3 ms-4">
                        <InputCheckbox @bind-Value="IncludePageGarde"
                                       @bind-Value:after="OnTableMatieresChanged"
                                       class="form-check-input"
                                       id="includePageGarde" />
                        <label class="form-check-label" for="includePageGarde">
                            <strong>Inclure la page de garde</strong>
                        </label>
                        <div class="form-text">
                            Référencer la page de garde dans la table
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-6">
                @if (DocumentGenere.IncludeTableMatieres)
                {
                    <div class="alert alert-info mb-0">
                        <span class="oi oi-info" aria-hidden="true"></span>
                        <strong>Aperçu :</strong>
                        <div class="mt-2">
                            <small>
                                1. Page de garde<br>
                                2. Table des matières<br>
                                @if (SectionsCount > 0)
                                {
                                    <span>3. Sections personnalisées (@SectionsCount)</span><br>
                                }
                                @if (FichesCount > 0)
                                {
                                    <span>@(SectionsCount > 0 ? "4" : "3"). Fiches techniques (@FichesCount)</span>
                                }
                            </small>
                        </div>
                    </div>
                }
            </div>
        </div>

        @if (DocumentGenere.IncludeTableMatieres)
        {
            <hr class="my-3">

            <!-- Configuration du titre et style -->
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="titreTOC" class="form-label">
                            <span class="oi oi-header" aria-hidden="true"></span>
                            Titre de la table des matières
                        </label>
                        <InputText @bind-Value="TitreTableMatieres"
                                   @bind-Value:after="OnTableMatieresChanged"
                                   class="form-control"
                                   id="titreTOC"
                                   placeholder="Table des matières"
                                   maxlength="100" />
                        <div class="form-text">
                            Personnalisez le titre affiché en haut de la table des matières
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="numeroPages" class="form-label">
                            <span class="oi oi-list-rich" aria-hidden="true"></span>
                            Numérotation
                        </label>
                        <InputSelect @bind-Value="IncludeNumeroPages"
                                     @bind-Value:after="OnTableMatieresChanged"
                                     class="form-select" id="numeroPages">
                            <option value="true">Avec numéros de pages</option>
                            <option value="false">Sans numéros de pages</option>
                        </InputSelect>
                        <div class="form-text">
                            Afficher les numéros de pages
                        </div>
                    </div>
                </div>
            </div>


            <!-- Aperçu avancé de la table des matières -->
            <div class="mt-4">
                <div class="card bg-light">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <span class="oi oi-eye" aria-hidden="true"></span>
                            Aperçu de la table des matières
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="toc-preview">
                            <h5 class="toc-title">@TitreTableMatieres</h5>
                            <div class="toc-content">
                                @if (IncludePageGarde)
                                {
                                    <div class="toc-entry">
                                        <span class="toc-bullet">•</span>
                                        <span class="toc-title-entry">Page de garde</span>
                                        @if (IncludeNumeroPages) { <span class="toc-page">........ 1</span> }
                                    </div>
                                }

                                @{
                                    int currentNumber = IncludePageGarde ? 2 : 1;
                                    int currentPage = IncludePageGarde ? 2 : 1;
                                }

                                @if (SectionsCount > 0)
                                {
                                    for(int i = 0; i < Math.Min(SectionsCount, 3); i++)
                                    {
                                        <div class="toc-entry">
                                            <span class="toc-bullet">•</span>
                                            <span class="toc-title-entry">Section personnalisée @(i + 1)</span>
                                            @if (IncludeNumeroPages) { <span class="toc-page">........ @(currentPage++)</span> }
                                        </div>
                                    }

                                    @if (SectionsCount > 3)
                                    {
                                        <div class="toc-entry text-muted">
                                            <span class="toc-title-entry">... et @(SectionsCount - 3) section(s) supplémentaire(s)</span>
                                        </div>
                                    }
                                }

                                @if (FichesCount > 0)
                                {
                                    <div class="toc-entry">
                                        <span class="toc-bullet">•</span>
                                        <span class="toc-title-entry">Fiches techniques (@FichesCount)</span>
                                        @if (IncludeNumeroPages) { <span class="toc-page">........ @(currentPage++)</span> }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public DocumentGenere DocumentGenere { get; set; } = new();
    [Parameter] public EventCallback<DocumentGenere> DocumentGenereChanged { get; set; }
    [Parameter] public int SectionsCount { get; set; } = 0;
    [Parameter] public int FichesCount { get; set; } = 0;

    // Propriétés pour la configuration de la table des matières
    public string TitreTableMatieres { get; set; } = "Table des matières";
    public bool IncludeNumeroPages { get; set; } = true;
    public bool IncludePageGarde { get; set; } = true;

    protected override void OnParametersSet()
    {
        LoadTableMatieresSettings();
    }

    private void LoadTableMatieresSettings()
    {
        try
        {
            // Charger les paramètres depuis le JSON ou utiliser les valeurs par défaut
            if (!string.IsNullOrWhiteSpace(DocumentGenere.Parametres))
            {
                var settings = JsonSerializer.Deserialize<TableMatieresSettings>(DocumentGenere.Parametres);
                if (settings?.TableMatieres != null)
                {
                    var config = settings.TableMatieres;
                    TitreTableMatieres = config.Titre ?? "Table des matières";
                    IncludeNumeroPages = config.IncludeNumeroPages;
                    IncludePageGarde = config.IncludePageGarde;
                    return;
                }
            }
        }
        catch
        {
            // Si erreur de désérialisation, utiliser les valeurs par défaut
        }

        // Valeurs par défaut
        TitreTableMatieres = "Table des matières";
        IncludeNumeroPages = true;
        IncludePageGarde = true;
    }

    private async Task OnTableMatieresChanged()
    {
        try
        {
            // Sauvegarder les paramètres dans le JSON
            var currentSettings = GetCurrentSettings();
            currentSettings.TableMatieres = new TableMatieresConfig
            {
                Titre = TitreTableMatieres,
                IncludeNumeroPages = IncludeNumeroPages,
                IncludePageGarde = IncludePageGarde
            };

            DocumentGenere.Parametres = JsonSerializer.Serialize(currentSettings, new JsonSerializerOptions
            {
                WriteIndented = true
            });

            await DocumentGenereChanged.InvokeAsync(DocumentGenere);
        }
        catch (Exception ex)
        {
            NotificationService.Notify(Radzen.NotificationSeverity.Error, "Erreur",
                $"Erreur lors de la configuration : {ex.Message}");
        }
    }

    private TableMatieresSettings GetCurrentSettings()
    {
        try
        {
            if (!string.IsNullOrWhiteSpace(DocumentGenere.Parametres))
            {
                return JsonSerializer.Deserialize<TableMatieresSettings>(DocumentGenere.Parametres) ?? new TableMatieresSettings();
            }
        }
        catch
        {
            // Si erreur de désérialisation, retourner nouvelles settings
        }
        return new TableMatieresSettings();
    }

    // Classes pour la sérialisation JSON
    private class TableMatieresSettings
    {
        public TableMatieresConfig? TableMatieres { get; set; }
    }

    private class TableMatieresConfig
    {
        public string Titre { get; set; } = "Table des matières";
        public bool IncludeNumeroPages { get; set; } = true;
        public bool IncludePageGarde { get; set; } = true;
    }
}

<style>
    .table-matieres-editor .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .table-matieres-editor .form-check-label {
        cursor: pointer;
    }

    .table-matieres-editor .alert {
        font-size: 0.9rem;
    }

    /* Styles pour l'aperçu de la table des matières */
    .toc-preview {
        max-height: 300px;
        overflow-y: auto;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .toc-title {
        color: #2c3e50;
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1rem;
        border-bottom: 2px solid #3498db;
        padding-bottom: 0.5rem;
    }

    .toc-content {
        line-height: 1.6;
    }

    .toc-entry {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
        padding: 0.25rem 0;
        border-bottom: 1px dotted #e9ecef;
    }

    .toc-entry:last-child {
        border-bottom: none;
    }

    .toc-level-2 {
        padding-left: 1.5rem;
        font-size: 0.9rem;
        color: #6c757d;
    }

    .toc-number {
        font-weight: 600;
        color: #495057;
        min-width: 2rem;
        margin-right: 0.5rem;
    }

    .toc-bullet {
        color: #3498db;
        font-size: 1.2rem;
        min-width: 1.5rem;
        margin-right: 0.5rem;
        text-align: center;
    }

    .toc-title-entry {
        flex-grow: 1;
        color: #2c3e50;
        font-weight: 500;
    }

    .toc-page {
        color: #6c757d;
        font-size: 0.9rem;
        font-family: 'Courier New', monospace;
        margin-left: 0.5rem;
    }

    .toc-entry.text-muted .toc-title-entry {
        color: #6c757d;
        font-style: italic;
        font-weight: normal;
    }

    /* Effet hover sur les entrées */
    .toc-entry:hover .toc-title-entry {
        color: #3498db;
        cursor: default;
    }

    /* Responsivité pour mobile */
    @@media (max-width: 768px) {
        .toc-page {
            display: none;
        }

        .toc-entry {
            flex-wrap: wrap;
        }
    }
</style>