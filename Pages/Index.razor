@page "/"
@using GenerateurDOE.Models
@using GenerateurDOE.Models.DTOs
@using GenerateurDOE.Services.Interfaces

@inject IDocumentGenereService DocumentGenereService
@inject IDocumentRepositoryService DocumentRepositoryService
@inject NavigationManager Navigation

<PageTitle>Générateur DOE</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h3>Générateur de Documents Techniques de Chantier</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-12" style="text-align: center;">
        <img src="images/illustration.png" alt="Illustration" class="img-fluid my-4 rounded" width="25%"/>
            <p style="font-style: italic;">Bienvenue dans l'application de génération de documents techniques de chantier. Cette application vous permet de créer, gérer et organiser facilement vos chantiers, fiches techniques et sections associées.</p>
        </div>
    </div>
    

    <div class="col-md-12">
        <div class="card"> 
            <div class="card-header">
                <h5>Ajouter des éléments</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <!-- Bouton Nouveau Chantier -->
                    <div class="col-md-4 text-left">
                        <button class="btn btn-primary" @onclick="NavigateToNouveauChantier">
                        <i class="oi oi-plus"></i> Nouveau Chantier
                        </button>
                    </div>

                    <!-- Bouton Nouvelle Fiche Technique -->
                    <div class="col-md-4 text-center" align="center">
                        <button class="btn btn-success" @onclick="NavigateToNouvelleFicheTechnique">
                        <i class="oi oi-plus"></i> Nouvelle Fiche Technique
                        </button>
                    </div>

                    <!-- Bouton Nouvelle Section -->
                    <div class="col-md-4 text-right" align="right">
                        <button class="btn btn-warning" @onclick="NavigateToNouvelleSection">
                        <i class="oi oi-plus"></i> Nouvelle Section
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>  
<br/>
<!-- Section Documents récents avec pagination optimisée -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Documents récents (@(pagedDocuments?.TotalCount ?? 0))</h5>
                    
                    <!-- Filtres rapides -->
                    <div class="d-flex gap-2">
                        <div class="btn-group btn-group-sm" role="group">
                            <input type="radio" class="btn-check" name="statusFilter" id="allDocs" value="" 
                                   checked="@(string.IsNullOrEmpty(statusFilter))" @onchange="OnStatusFilterChanged" />
                            <label class="btn btn-outline-secondary" for="allDocs">Tous</label>
                            
                            <input type="radio" class="btn-check" name="statusFilter" id="inProgress" value="EnCours" 
                                   checked="@(statusFilter == "EnCours")" @onchange="OnStatusFilterChanged" />
                            <label class="btn btn-outline-warning" for="inProgress">En cours</label>
                            
                            <input type="radio" class="btn-check" name="statusFilter" id="finalized" value="Finalise" 
                                   checked="@(statusFilter == "Finalise")" @onchange="OnStatusFilterChanged" />
                            <label class="btn btn-outline-success" for="finalized">Finalisés</label>
                        </div>
                    </div>
                </div>
                
                <div class="card-body">
                    @if (isLoading)
                    {
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Chargement...</span>
                            </div>
                            <p class="mt-2 text-muted">Chargement des documents...</p>
                        </div>
                    }
                    else if (pagedDocuments?.Items?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Type</th>
                                        <th>Fichier</th>
                                        <th>Chantier</th>
                                        <th>Lot</th>
                                        <th>Contenu</th>
                                        <th>Statut</th>
                                        <th>Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var document in pagedDocuments.Items)
                                    {
                                        <tr style="cursor: pointer;" @onclick="@(() => EditDocument(document.Id))">
                                            <td>
                                                <span class="badge bg-@GetTypeBadgeColor(document.TypeDocument)">
                                                    @document.TypeDocumentLibelle
                                                </span>
                                            </td>
                                            <td>
                                                <strong>@document.NomFichier</strong>
                                                <br><small class="text-muted">@document.FormatExport</small>
                                            </td>
                                            <td>
                                                <strong>@document.ChantierNom</strong>
                                            </td>
                                            <td>
                                                <span class="text-primary fw-bold">@document.ChantierLot</span>
                                            </td>
                                            <td class="text-center">
                                                <small>
                                                    @if (document.NbSections > 0)
                                                    {
                                                        <span class="badge bg-info me-1">@document.NbSections sections</span>
                                                    }
                                                    @if (document.NbFichesTechniques > 0)
                                                    {
                                                        <span class="badge bg-secondary">@document.NbFichesTechniques FT</span>
                                                    }
                                                </small>
                                            </td>
                                            <td>
                                                <span class="badge bg-@(document.EnCours ? "warning" : "success")">
                                                    @document.StatutVisuel
                                                </span>
                                            </td>
                                            <td>
                                                <small>@document.DateCreation.ToString("dd/MM/yyyy HH:mm")</small>
                                            </td>
                                            <td>
                                                <button class="btn btn-outline-primary btn-sm"
                                                        @onclick:stopPropagation="true"
                                                        @onclick="@(() => EditDocument(document.Id))"
                                                        title="Modifier le document">
                                                    <span class="oi oi-pencil"></span>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        <!-- Composant de pagination -->
                        <div class="d-flex justify-content-center mt-3">
                            <PaginationComponent T="DocumentListDto" 
                                               PagedData="@pagedDocuments" 
                                               PageSize="@currentPageSize"
                                               OnPageChanged="@OnPageChanged" 
                                               OnPageSizeChanged="@OnPageSizeChanged" />
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <span class="oi oi-document" style="font-size: 3rem; opacity: 0.3;"></span>
                            <p class="mt-2 text-muted">Aucun document trouvé</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // ⚡ Variables pour pagination optimisée
    private PagedResult<DocumentListDto>? pagedDocuments;
    private bool isLoading = true;
    private int currentPage = 1;
    private int currentPageSize = 10;
    private string statusFilter = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadDocuments();
    }

    private async Task LoadDocuments()
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            
            // ⚡ Utilisation des nouvelles méthodes optimisées avec projections DTO
            // Performance: +30-50% vs chargement entités complètes
            pagedDocuments = await DocumentRepositoryService.GetPagedDocumentsAsync(
                page: currentPage, 
                pageSize: currentPageSize);
        }
        catch (Exception ex)
        {
            // Log error or handle appropriately
            pagedDocuments = PagedResult<DocumentListDto>.Create(
                Enumerable.Empty<DocumentListDto>(), 0, 1, currentPageSize);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task OnPageChanged(int newPage)
    {
        if (currentPage != newPage)
        {
            currentPage = newPage;
            await LoadDocuments();
        }
    }

    private async Task OnPageSizeChanged(int newPageSize)
    {
        if (currentPageSize != newPageSize)
        {
            currentPageSize = newPageSize;
            currentPage = 1; // Reset à la première page
            await LoadDocuments();
        }
    }

    private async Task OnStatusFilterChanged(ChangeEventArgs e)
    {
        var newFilter = e.Value?.ToString() ?? "";
        if (statusFilter != newFilter)
        {
            statusFilter = newFilter;
            currentPage = 1; // Reset à la première page
            // TODO: Implémenter le filtrage par statut dans DocumentRepositoryService
            await LoadDocuments();
        }
    }

    private void EditDocument(int id)
    {
        Navigation.NavigateTo($"/document/edit/{id}");
    }

    private string GetTypeBadgeColor(TypeDocumentGenere type) => type switch
    {
        TypeDocumentGenere.DOE => "primary",
        TypeDocumentGenere.DossierTechnique => "info",
        TypeDocumentGenere.MemoireTechnique => "warning",
        _ => "secondary"
    };

    // Méthodes de navigation vers les pages avec ouverture automatique des modals
    private void NavigateToNouveauChantier()
    {
        Navigation.NavigateTo("/chantiers?action=nouveau");
    }

    private void NavigateToNouvelleFicheTechnique()
    {
        Navigation.NavigateTo("/fiches-techniques?action=nouveau");
    }

    private void NavigateToNouvelleSection()
    {
        Navigation.NavigateTo("/sections-libres?action=nouveau");
    }
}