@page "/test-editor"
@using GenerateurDOE.Components.Shared

<PageTitle>Test de l'Éditeur Riche</PageTitle>

<div class="container-fluid">
    <h1 class="mb-4">
        <span class="oi oi-cog" aria-hidden="true"></span>
        Test de l'Éditeur Riche - Radzen HtmlEditor
    </h1>

    @if (!string.IsNullOrEmpty(statusMessage))
    {
        <div class="alert @(isSuccess ? "alert-success" : "alert-danger") alert-dismissible fade show" role="alert">
            <span class="oi oi-@(isSuccess ? "check" : "warning")" aria-hidden="true"></span>
            @statusMessage
            <button type="button" class="btn-close" @onclick="ClearMessage"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <span class="oi oi-document" aria-hidden="true"></span>
                        Éditeur de Test
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Contenu HTML</label>
                        <RichTextEditor @ref="richTextEditor"
                                      @bind-Value="htmlContent"
                                      Placeholder="Testez votre éditeur ici..."
                                      Height="500px"
                                      CssClass="border" />
                        <small class="form-text text-muted">
                            Testez toutes les fonctionnalités : formatage, couleurs, listes, images, liens...
                        </small>
                    </div>

                    <div class="d-flex gap-2 flex-wrap">
                        <button type="button" class="btn btn-primary" @onclick="SaveContent">
                            <span class="oi oi-data-transfer-download" aria-hidden="true"></span>
                            Sauvegarder le contenu
                        </button>
                        
                        <button type="button" class="btn btn-secondary" @onclick="LoadSampleContent">
                            <span class="oi oi-document" aria-hidden="true"></span>
                            Charger exemple
                        </button>
                        
                        <button type="button" class="btn btn-warning" @onclick="ClearContent">
                            <span class="oi oi-trash" aria-hidden="true"></span>
                            Vider
                        </button>
                        
                        <button type="button" class="btn btn-info" @onclick="ShowHtmlSource">
                            <span class="oi oi-code" aria-hidden="true"></span>
                            Voir HTML
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">
                        <span class="oi oi-eye" aria-hidden="true"></span>
                        Aperçu du rendu
                    </h6>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(htmlContent))
                    {
                        <div class="border p-3 bg-light" style="max-height: 400px; overflow-y: auto;">
                            @((MarkupString)htmlContent)
                        </div>
                    }
                    else
                    {
                        <div class="text-muted text-center py-4">
                            <span class="oi oi-info" aria-hidden="true"></span>
                            <p class="mb-0">Aucun contenu à afficher</p>
                        </div>
                    }
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>
                        Tests à effectuer
                    </h6>
                </div>
                <div class="card-body">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test1">
                        <label class="form-check-label" for="test1">
                            Formatage de texte (gras, italique, souligné)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test2">
                        <label class="form-check-label" for="test2">
                            Titres (H1 à H6)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test3">
                        <label class="form-check-label" for="test3">
                            Listes (ordonnées et non-ordonnées)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test4">
                        <label class="form-check-label" for="test4">
                            Couleurs (texte et arrière-plan)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test5">
                        <label class="form-check-label" for="test5">
                            Insertion d'images
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test6">
                        <label class="form-check-label" for="test6">
                            Création de liens
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test7">
                        <label class="form-check-label" for="test7">
                            Alignement (gauche, centre, droite)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="test8">
                        <label class="form-check-label" for="test8">
                            Sauvegarde et chargement de contenu
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (showHtmlModal)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">
                            <span class="oi oi-code" aria-hidden="true"></span>
                            Code HTML généré
                        </h5>
                        <button type="button" class="btn-close" @onclick="CloseHtmlModal"></button>
                    </div>
                    <div class="modal-body">
                        <pre class="bg-light p-3 border rounded" style="max-height: 400px; overflow-y: auto;"><code>@htmlContent</code></pre>
                        <div class="mt-3">
                            <strong>Nombre de caractères :</strong> @(htmlContent?.Length ?? 0)
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseHtmlModal">Fermer</button>
                        <button type="button" class="btn btn-primary" @onclick="CopyToClipboard">
                            <span class="oi oi-clipboard" aria-hidden="true"></span>
                            Copier
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private RichTextEditor? richTextEditor;
    private string htmlContent = string.Empty;
    private string savedContent = string.Empty;
    private string statusMessage = string.Empty;
    private bool isSuccess = false;
    private bool showHtmlModal = false;

    private void SaveContent()
    {
        try
        {
            savedContent = htmlContent;
            statusMessage = "Contenu sauvegardé avec succès !";
            isSuccess = true;
            
            if (richTextEditor != null)
            {
                richTextEditor.ShowSuccess("Contenu sauvegardé !");
            }
        }
        catch (Exception ex)
        {
            statusMessage = $"Erreur lors de la sauvegarde : {ex.Message}";
            isSuccess = false;
        }
    }

    private void LoadSampleContent()
    {
        var sampleContent = @"
            <h1>Titre Principal</h1>
            <p>Ceci est un paragraphe avec du texte <strong>en gras</strong> et <em>en italique</em>.</p>
            
            <h2>Liste à puces</h2>
            <ul>
                <li>Premier élément</li>
                <li>Deuxième élément avec <span style=""color: red;"">texte coloré</span></li>
                <li>Troisième élément</li>
            </ul>
            
            <h2>Liste numérotée</h2>
            <ol>
                <li>Étape 1</li>
                <li>Étape 2</li>
                <li>Étape 3</li>
            </ol>
            
            <p style=""text-align: center;"">Ce texte est centré et contient un <a href=""#"">lien</a>.</p>
            
            <blockquote style=""background-color: #f8f9fa; padding: 15px; border-left: 4px solid #007bff;"">
                Ceci est une citation ou un encadré important.
            </blockquote>
        ";
        
        htmlContent = sampleContent.Trim();
        richTextEditor?.SetValue(htmlContent);
        
        statusMessage = "Contenu d'exemple chargé !";
        isSuccess = true;
    }

    private void ClearContent()
    {
        htmlContent = string.Empty;
        richTextEditor?.Clear();
        statusMessage = "Éditeur vidé !";
        isSuccess = true;
    }

    private void ShowHtmlSource()
    {
        showHtmlModal = true;
    }

    private void CloseHtmlModal()
    {
        showHtmlModal = false;
    }

    private async Task CopyToClipboard()
    {
        try
        {
            // Note: En production, il faudrait utiliser Navigator.Clipboard API via JS
            statusMessage = "Code HTML prêt à être copié (fonctionnalité simulée)";
            isSuccess = true;
        }
        catch
        {
            statusMessage = "Impossible de copier dans le presse-papier";
            isSuccess = false;
        }
        finally
        {
            CloseHtmlModal();
        }
    }

    private void ClearMessage()
    {
        statusMessage = string.Empty;
    }
}