# ===================================================================
# Docker Compose Production - G√©n√©rateur DOE
# ===================================================================
# Configuration pour d√©ploiement via Portainer avec image GHCR
# D√©ploiement: Manuel via Portainer apr√®s build GitHub Actions
# ===================================================================

version: '3.8'

services:
  # ===================================================================
  # PostgreSQL Database Service
  # ===================================================================
  postgres:
    image: postgres:16-alpine
    container_name: generateur-doe-postgres
    hostname: postgres
    restart: unless-stopped

    environment:
      POSTGRES_DB: GenerateurDOE_Prod
      POSTGRES_USER: generateur_user
      POSTGRES_PASSWORD: GenerateurDOE2025!
      PGDATA: /var/lib/postgresql/data

    volumes:
      - /data/generateur-doe-data/postgres:/var/lib/postgresql/data
      - /data/generateur-doe-data/backups:/var/backups

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U generateur_user -d GenerateurDOE_Prod"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    network_mode: host
    user: "1001:1001"

  # ===================================================================
  # G√©n√©rateur DOE Application Service
  # ===================================================================
  generateur-doe:
    # Image depuis GitHub Container Registry (GHCR)
    image: ghcr.io/zaytar68/generateurdoe:latest
    container_name: generateur-doe-app
    hostname: generateur-doe
    restart: unless-stopped

    depends_on:
      postgres:
        condition: service_healthy

    environment:
      # ASP.NET Core Configuration
      ASPNETCORE_ENVIRONMENT: "Production"
      ASPNETCORE_URLS: "http://+:5000"
      DOTNET_RUNNING_IN_CONTAINER: "true"

      # PostgreSQL Connection String
      ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=GenerateurDOE_Prod;Username=generateur_user;Password=GenerateurDOE2025!;SSL Mode=Prefer;Trust Server Certificate=true;Command Timeout=300;"

      # Application Settings
      AppSettings__RepertoireStockagePDF: "/app/Documents/PDF"
      AppSettings__RepertoireStockageImages: "/app/Documents/Images"
      AppSettings__NomSociete: "Multisols"
      AppSettings__ApplicationVersion: "2.1.4"

      # Database Provider
      DatabaseProvider: "PostgreSQL"

      # Serilog Configuration
      Serilog__WriteTo__0__Args__path: "/app/Logs/app-.log"
      Serilog__MinimumLevel__Default: "Information"

      # PuppeteerSharp Configuration
      PUPPETEER_EXECUTABLE_PATH: "/usr/bin/google-chrome-stable"
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"

      # PostgreSQL specific settings
      Npgsql__EnableLegacyTimestampBehavior: "true"

    volumes:
      - /data/generateur-doe-data/documents/pdf:/app/Documents/PDF
      - /data/generateur-doe-data/documents/images:/app/Documents/Images
      - /data/generateur-doe-data/logs:/app/Logs
      - /data/generateur-doe-data/dataprotection-keys:/app/DataProtection-Keys
      - /data/generateur-doe-data/temp:/app/wwwroot/temp

    healthcheck:
      test: curl -f http://localhost:5000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

    network_mode: host
    user: "1000:1000"

    # Capabilities requises pour Chrome/Puppeteer
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined

  # ===================================================================
  # pgAdmin for PostgreSQL Management
  # ===================================================================
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: generateur-doe-pgadmin
    hostname: pgadmin
    restart: unless-stopped

    depends_on:
      - postgres

    environment:
      PGADMIN_DEFAULT_EMAIL: cedric.tirolf@multisols.com
      PGADMIN_DEFAULT_PASSWORD: GenerateurDOE2025!
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_DISABLE_POSTFIX: 'true'
      PGADMIN_LISTEN_PORT: 8080

    volumes:
      - /data/generateur-doe-data/pgadmin:/var/lib/pgadmin

    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/misc/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    network_mode: host

# ===================================================================
# Notes de D√©ploiement
# ===================================================================
#
# üöÄ Workflow de D√©ploiement:
# 1. Code ‚Üí git push origin production
# 2. GitHub Actions build automatiquement l'image GHCR
# 3. Attendre 5-10 minutes (build termin√©)
# 4. Portainer: Stacks ‚Üí Update stack ‚Üí Re-pull image
# 5. Application red√©marre en 1-2 minutes
#
# üìä Suivi des Versions:
# - Version dans appsettings.json et .csproj synchronis√©e
# - Tags Git cr√©√©s automatiquement (v2.1.4)
# - Images GHCR tagu√©es: latest + v2.1.4
#
# üîê S√©curit√©:
# - Migrations d√©sactiv√©es (gestion manuelle)
# - Chrome sandboxed avec cap_add SYS_ADMIN
# - Users non-root (1000:1000, 1001:1001)
#
# ===================================================================
