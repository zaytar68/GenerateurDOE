// <auto-generated />
using System;
using GenerateurDOE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenerateurDOE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenerateurDOE.Models.Chantier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("IntituleLot")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MaitreOeuvre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MaitreOuvrage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NomProjet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumeroLot")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Chantiers");
                });

            modelBuilder.Entity("GenerateurDOE.Models.DocumentExport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChantierId")
                        .HasColumnType("int");

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("FormatExport")
                        .HasColumnType("int");

                    b.Property<bool>("IncludePageDeGarde")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeTableMatieres")
                        .HasColumnType("bit");

                    b.Property<string>("NomFichier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Parametres")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("TypeDocument")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChantierId");

                    b.ToTable("DocumentsExport");
                });

            modelBuilder.Entity("GenerateurDOE.Models.FicheTechnique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChantierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NomFabricant")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TypeProduit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ChantierId");

                    b.ToTable("FichesTechniques");
                });

            modelBuilder.Entity("GenerateurDOE.Models.ImageMethode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateImport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MethodeId")
                        .HasColumnType("int");

                    b.Property<string>("NomFichierOriginal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrdreAffichage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MethodeId");

                    b.ToTable("ImagesMethode");
                });

            modelBuilder.Entity("GenerateurDOE.Models.ImportPDF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DateImport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("FicheTechniqueId")
                        .HasColumnType("int");

                    b.Property<string>("NomFichierOriginal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("TailleFichier")
                        .HasColumnType("bigint");

                    b.Property<int>("TypeDocument")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FicheTechniqueId");

                    b.ToTable("ImportsPDF");
                });

            modelBuilder.Entity("GenerateurDOE.Models.Methode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateModification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdreAffichage")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Methodes");
                });

            modelBuilder.Entity("GenerateurDOE.Models.DocumentExport", b =>
                {
                    b.HasOne("GenerateurDOE.Models.Chantier", "Chantier")
                        .WithMany("DocumentsExportes")
                        .HasForeignKey("ChantierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chantier");
                });

            modelBuilder.Entity("GenerateurDOE.Models.FicheTechnique", b =>
                {
                    b.HasOne("GenerateurDOE.Models.Chantier", "Chantier")
                        .WithMany("FichesTechniques")
                        .HasForeignKey("ChantierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Chantier");
                });

            modelBuilder.Entity("GenerateurDOE.Models.ImageMethode", b =>
                {
                    b.HasOne("GenerateurDOE.Models.Methode", "Methode")
                        .WithMany("Images")
                        .HasForeignKey("MethodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Methode");
                });

            modelBuilder.Entity("GenerateurDOE.Models.ImportPDF", b =>
                {
                    b.HasOne("GenerateurDOE.Models.FicheTechnique", "FicheTechnique")
                        .WithMany("ImportsPDF")
                        .HasForeignKey("FicheTechniqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FicheTechnique");
                });

            modelBuilder.Entity("GenerateurDOE.Models.Chantier", b =>
                {
                    b.Navigation("DocumentsExportes");

                    b.Navigation("FichesTechniques");
                });

            modelBuilder.Entity("GenerateurDOE.Models.FicheTechnique", b =>
                {
                    b.Navigation("ImportsPDF");
                });

            modelBuilder.Entity("GenerateurDOE.Models.Methode", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
